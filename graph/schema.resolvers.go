package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.53

import (
	"context"

	"github.com/dipankarupd/go-graphql-crud/db"
	"github.com/dipankarupd/go-graphql-crud/graph/model"
)

var database = db.Connect()

// AddBook is the resolver for the addBook field.
func (r *mutationResolver) AddBook(ctx context.Context, input model.AddBookInput) (*model.Books, error) {
	return database.AddBook(input), nil
}

// UpdateBook is the resolver for the updateBook field.
func (r *mutationResolver) UpdateBook(ctx context.Context, id string, input model.UpdateBookInput) (*model.Books, error) {
	return database.UpdateBook(id, input), nil
}

// RemoveBook is the resolver for the removeBook field.
func (r *mutationResolver) RemoveBook(ctx context.Context, id string) (*model.RemoveBookResponse, error) {
	return database.RemoveBook(id), nil
}

// Books is the resolver for the books field.
func (r *queryResolver) Books(ctx context.Context) ([]*model.Books, error) {
	return database.GetAllBooks(), nil
}

// Book is the resolver for the book field.
func (r *queryResolver) Book(ctx context.Context, id string) (*model.Books, error) {
	return database.GetBook(id), nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
